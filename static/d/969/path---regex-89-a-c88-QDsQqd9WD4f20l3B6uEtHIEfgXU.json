{"data":{"markdownRemark":{"html":"<h2>grep / egrep / fgrep  文本搜尋工具</h2>\n<ul>\n<li>grep - global regular expression print, 全面搜尋正規表達式並印出來</li>\n<li>egrep - grep的擴展</li>\n<li>fgrep - fgrep就是fixed grep或fast grep，它們把所有的字母都看作單詞</li>\n</ul>\n<h2>egrep詮釋字元</h2>\n<h3>一行的開始與結尾</h3>\n<ul>\n<li>^ - 脫字元, caret, 比對行首開頭</li>\n<li>$ - 錢, dollar, 比對行末結尾</li>\n</ul>\n<p><code class=\"language-text\">^cat</code> <br>\n不是：<del>會匹配以cat開頭的行</del> <br>\n而是：要匹配的話，要先有行首，緊接著c，緊接著a，再緊接著t。</p>\n<h3>字元類別</h3>\n<h4>匹配特定幾個字元之一 [ae]</h4>\n<ul>\n<li>[...] - 字元類別(character class) / 隱含“或”的意思</li>\n</ul>\n<p><code class=\"language-text\">gr[ae]y</code> <br>\n解釋：要找到g，後面跟著r，接著跟著e或a，最後再出現y</p>\n<ul>\n<li>g和r的關係：且接著</li>\n<li>[ea]的關係：或</li>\n</ul>\n<p><code class=\"language-text\">&lt;h[123456]&gt;</code> <br>\n解釋：會匹配&#x3C;h1>、&#x3C;h2>、&#x3C;h3>等內容</p>\n<h4>字元類別詮釋字元(character-class metacharacter) 「0-9A-Za-z」</h4>\n<ul>\n<li>- : 連字號，可用來表示一段字元範圍，只有在字元類別([...])內是解釋成詮釋字元</li>\n</ul>\n<p><code class=\"language-text\">&lt;h[123456]&gt;</code>即等於<code class=\"language-text\">&lt;h[1-6]&gt;</code> <br>\n<code class=\"language-text\">[0123456789abcdefABCDEF]</code>即等於<code class=\"language-text\">[0-9a-fA-F]</code>或是<code class=\"language-text\">[A-Fa-f0-9]</code>。\n因為範圍之間的<code class=\"language-text\">先後順序並不重要</code> <br>\n<code class=\"language-text\">[0-9A-Z_!.?]</code> <br>\n解釋：匹配數字、大寫英文字母、底線、驚嘆號、句點或問號</p>\n<h4>效果反轉的字元類別 <sup id=\"fnref-...\"><a href=\"#fn-...\" class=\"footnote-ref\">...</a></sup></h4>\n<p>如果寫成<sup id=\"fnref-...\"><a href=\"#fn-...\" class=\"footnote-ref\">...</a></sup>而不是[...]的話，類別就會匹配任何<strong>沒有</strong>列出的字元\n<code class=\"language-text\">[^1-6]</code> <br>\n解釋：匹配1到6以外的任何字元</p>\n<p><code class=\"language-text\">egrep &#39;q[^u]&#39; xxx.list</code> <br>\n解釋：q後面跟著一個字元，且這個字元不是u\n\"Qantas\"和\"Iraq\"不會被匹配到，因為：</p>\n<ol>\n<li>Qantas的\"Q\"是大寫</li>\n<li>Iraq的q後面沒有跟著一個字元，出局！一個字元類別就算反轉了，終究需要一個字元讓它匹配。</li>\n</ol>\n<h3>以句點匹配任何字元 「.」</h3>\n<ul>\n<li>「.」這個詮釋字元(通常稱為dot或point)，是<code class=\"language-text\">匹配任何字元</code>的字元類別的簡寫法。當您想在式子裡放一個\"允許任何字元\"的地方時，就可以使用它</li>\n</ul>\n<p><code class=\"language-text\">03.19.76</code> <br>\n解釋：匹配0，緊接著3，緊接著任何字元，緊接著1，緊接著9，緊接著任何字元，緊接著7，緊接著6\n所以說<code class=\"language-text\">03.19.76</code>可能的匹配結果包含<code class=\"language-text\">03/19/76</code>或<code class=\"language-text\">03-19.76</code>或<code class=\"language-text\">03319976</code><br>\n<code class=\"language-text\">03[-./]19[-./]76</code><br>\n這面這個表達式中，「.」就不是詮釋字元，因為他在字元類別([...])內。 <br>\n解釋：匹配0，緊接著3，接著可能是「-」或「.」或「/」，然後再接著1，接著9，接著可能是「-」或「.」或「/」，再接著可能是7，接著6</p>\n<h3>選項</h3>\n<h4>匹配幾個子表達式之一 (xxx|yyy|kkk)</h4>\n<ul>\n<li>| 為詮釋字元，代表\"或\"，它讓我們能夠將多個表達式結合成單一個表達式。 <br>\n<code class=\"language-text\">Bob|Robert</code> <br>\n解釋：上方表達是一個表達式，不管是Bob或Robert都會匹配。</li>\n</ul>\n<p><code class=\"language-text\">gr[ea]y</code>等於<code class=\"language-text\">grey|gray</code>等於<code class=\"language-text\">gr(a|e)y</code><br>\n<strong>備註：</strong>千萬不要混在一起！</p>\n<ul>\n<li>\"()\"小括號是詮釋字元</li>\n<li>\"[...]\"中括號是字元類別，如果\"|\"在字元類別中出現，則只是普通字元，沒有特殊意義</li>\n</ul>\n<p><code class=\"language-text\">(Geoff|Jeff)(rey|ery)</code>等於<code class=\"language-text\">(Geo|Je)ff(rey|ery)</code>等於<code class=\"language-text\">(Geo|Je)ff(re|er)y</code><br>\n以上三種表達式等於接下來出現的這個=> <code class=\"language-text\">Jeffrey|Geoffery|Jeffery|Geoffrey</code> <br>\n雖然比較長但也比較簡單！</p>\n<p><code class=\"language-text\">「^From\\|Subject\\|Date: 」vs.「^(From|Subject|Date): 」</code> <br></p>\n<ul>\n<li>「^From|Subject|Date: 」:匹配「^From」、「Subject」或「Date: 」</li>\n<li>\n<p>「^(From|Subject|Date): 」:匹配行首，接著匹配「From」、「Subject」或「Date」三者之一，接著匹配「: 」<br>\n文言版解釋： <br></p>\n<ol>\n<li>行首，跟著F．r．o．m，跟著\": \" ，或是<br></li>\n<li>行首，跟著S．u．b．j．e．c．t，跟著\": \"，或是<br></li>\n<li>行首，跟著D．a．t．e，跟著\": \"<br>\n白話版解釋：<br>\n匹配行首開頭是「From: 」、「Subject: 」或「Date: 」的行。<br></li>\n</ol>\n</li>\n</ul>\n<p>以下範例：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">egrep</span> <span class=\"token string\">'^(From|Subject|Date): '</span> mailbox\nFrom: ele@ta.org\nSubject: be seenin<span class=\"token punctuation\">..</span>.\nDate: Mon, 23 Oct <span class=\"token punctuation\">..</span>.</code></pre></div>\n<h3>忽視大小寫差異 -i</h3>\n<p>egrep的命令列選項<code class=\"language-text\">&quot;-i&quot;</code>能告訴它進行不區分大小寫的比對，如： <br></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">egrep</span> -i <span class=\"token string\">'^(From|Subject|Date): '</span> mailbox</code></pre></div>\n<p>如此一來，連\"SUBJECT: MAKE MONEY FAST...\"等內容都可以匹配到</p>\n<h3>單詞邊界</h3>\n<p>註：並不是所有egrep版本都支援單詞邊界 <br>\n單詞邊界可以幫助我們在一個句子中找到我們要的詞。 <br>\n如果版本有支援的話就可以使用<strong>詮釋序列(metasequences)</strong>「&#x3C;」與「>」。<br>\n<code class=\"language-text\">&lt;cat&gt;</code><br>\n解釋：假如可以找到單詞的開始位置，後面緊接著cat，後面再緊接著單詞結束位置的話，就匹配。<br>\n白話版：找到cat這個單詞。</p>\n<h3>整理小結</h3>\n<table>\n<thead>\n<tr>\n<th>詮釋字元</th>\n<th>名稱</th>\n<th>匹配內容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.</td>\n<td>句點</td>\n<td>任何一個字元</td>\n</tr>\n<tr>\n<td>[...]</td>\n<td>字元類別</td>\n<td>任何一個列出的字元</td>\n</tr>\n<tr>\n<td>[^...]</td>\n<td>反轉字元類別</td>\n<td>任何一個沒有列出的字元</td>\n</tr>\n<tr>\n<td>^</td>\n<td>脫字號</td>\n<td>行首位置</td>\n</tr>\n<tr>\n<td>$</td>\n<td>錢號</td>\n<td>行尾位置</td>\n</tr>\n<tr>\n<td>\\&#x3C;</td>\n<td>反斜線、小於</td>\n<td>單字的開始位置(某些egrep版本不支援)</td>\n</tr>\n<tr>\n<td>\\></td>\n<td>反斜線、大於</td>\n<td>單字的結束位置(某些egrep版本不支援)</td>\n</tr>\n<tr>\n<td>|</td>\n<td>或，bar</td>\n<td>匹配由它分隔的任一表達式</td>\n</tr>\n<tr>\n<td>(...)</td>\n<td>括號</td>\n<td>用來限制「|」的範圍，以及一些之後會提到的功能</td>\n</tr>\n</tbody>\n</table>\n<h3>可以省略的項目 colou?r</h3>\n<ul>\n<li>? (問號，question mark)為詮釋字元，只對緊鄰它前面的項目有效</li>\n</ul>\n<p><code class=\"language-text\">(July|Jul) (fourth|4th|4)</code><br>\n上面是匹配七月四日的寫法，七月可能是July或Jul，四日可能是fourth、4th或4<br>\n以上的表達式可以使用「?」達到省略效果，以下表達式和上面表達式意義是相同的。<br>\n<code class=\"language-text\">(July?) (fourth|4th|4)</code> <br>\n沒有|後代表括號部分不需要，也可省略，即等於<br>\n<code class=\"language-text\">July? (fourth|4th|4)</code><br>\n如果?被放在括號()外，括號()的內容會被視為一個單位，即等於<br>\n<code class=\"language-text\">July? (fourth|4(th)?)</code></p>\n<h3>其他量詞：反覆出現 「+」、「*」</h3>\n<ul>\n<li>+ 詮釋字元。代表“緊鄰前面的項目出現<strong>一次</strong>或<strong>多次</strong>” <code class=\"language-text\">至少一定要出現一次！</code></li>\n<li>* 詮釋字元。代表“緊鄰前面的項目出現<strong>任何次數</strong>，包含<strong>不出現</strong>”</li>\n</ul>\n<blockquote>\n<p>「?」、「+」、「*」都代表量詞(quantifiers)，因為它們會影響掌管範圍的出現次數</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>至少需要</th>\n<th>最多嘗試</th>\n<th>意義</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>?</td>\n<td>無</td>\n<td>1</td>\n<td>允許一個\b；不必要(\"一個可省略的\")</td>\n</tr>\n<tr>\n<td>*</td>\n<td>無</td>\n<td>不限</td>\n<td>允許無限多個；不必要(\"任何數量皆可\")</td>\n</tr>\n<tr>\n<td>+</td>\n<td>1</td>\n<td>不限</td>\n<td>允許無限多個；需要一個(\"至少一個\")</td>\n</tr>\n</tbody>\n</table>\n<h3>定義匹配次數範圍 「...{ 下限, 上限 }」</h3>\n<ul>\n<li>\n<p>範例：<code class=\"language-text\">[a-zA-Z]{1,5}</code></p>\n<ul>\n<li>1~5個英文字母(大小寫不限)</li>\n</ul>\n</li>\n</ul>\n<p>練習：\n驗證手機號碼</p>","frontmatter":{"date":"November 24, 2018","path":"/regex","title":"Regular Expressions"}}},"pageContext":{}}