{"version":3,"sources":["webpack:///./src/pages/posts.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/post_link.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_post_link__WEBPACK_IMPORTED_MODULE_2__","TagsPage","_ref","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","a","createElement","key","id","post","className","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","class","gatsby_browser_entry","activeClassName","to","Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","header","_755544856","gatsby__WEBPACK_IMPORTED_MODULE_1__","PostLink","path"],"mappings":"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","file":"component---src-pages-posts-js-4a8f9d80da11d1831ac3.js","sourcesContent":["import React from \"react\"\n\n// Components\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport PostLink from \"../components/post_link\"\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n      <div className=\"main-content\">\n        <h1>文章列表</h1>\n        <div className=\"main-content\">\n          <ul className=\"post-list\">{Posts}</ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({siteTitle}) => (\n  <header className=\"header\">\n    <div class=\"header-container\">\n      <Link\n        class=\"header-title\"\n        activeClassName=\"header-title\"\n        to=\"/\">{siteTitle}</Link>\n      <nav>\n        <Link\n          class=\"header-link\"\n          to=\"/posts\">文章列表</Link>\n        <Link\n          class=\"header-link\"\n          to=\"/tags\"\n        >標籤索引</Link>\n      </nav>\n    </div>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description', content: `Yvonne's blog`\n            }\n          ]}\n        >\n          <html lang=\"zh-TW\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <li>\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </li>\n)\n\nexport default PostLink"],"sourceRoot":""}