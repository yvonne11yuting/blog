{"version":3,"sources":["webpack:///./src/templates/tagsTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/PostItem.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_PostItem__WEBPACK_IMPORTED_MODULE_3__","TagsTemplate","_ref","pageContext","data","tag","Posts","allMarkdownRemark","edges","map","edge","a","createElement","key","node","id","post","className","propTypes","PropTypes","shape","string","isRequired","arrayOf","frontmatter","date","path","title","graphql","StaticQueryContext","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","gatsby_browser_entry","to","activeClassName","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","href","rel","header","_755544856","gatsby__WEBPACK_IMPORTED_MODULE_1__","PostItem","excerpt"],"mappings":"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","file":"component---src-templates-tags-template-js-c3dcb37fbe96b4fe7ec1.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport Layout from \"../components/layout\";\nimport PostItem from \"../components/PostItem\"\n\n// Components\nimport { graphql } from \"gatsby\"\n\nconst TagsTemplate = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges } = data.allMarkdownRemark\n  const Posts = edges.map(edge => <PostItem key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n      <h1>{tag}</h1>\n      <div className=\"main-content\">\n        <ul className=\"post-list\">{Posts}</ul>\n      </div>\n    </Layout>\n  )\n}\n\nTagsTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              date: PropTypes.string.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default TagsTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({siteTitle}) => (\n  <header className=\"header\">\n    <div className=\"header-container\">\n      <Link\n        className=\"header-title\"\n        to=\"/\">{siteTitle}</Link>\n      <nav>\n        <Link\n          className=\"header-link\"\n          activeClassName=\"active\"\n          to=\"/posts\">文章列表</Link>\n        <Link\n          className=\"header-link\"\n          activeClassName=\"active\"\n          to=\"/tags\"\n        >標籤索引</Link>\n      </nav>\n    </div>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description', content: `Yvonne's blog`\n            }\n          ]}\n        >\n          <html lang=\"zh-Hant-TW\" />\n          <link href=\"https://fonts.googleapis.com/css?family=Roboto:400,500\" rel=\"stylesheet\"></link>\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst PostItem = ({ post }) => (\n  <li className=\"post-item\">\n    <h2 className=\"post-item-title\">\n      <Link\n        to={ post.frontmatter.path }\n        className=\"post-item-link\"\n      >{ post.frontmatter.title }</Link>\n    </h2>\n    <div className=\"post-item-date\"><b>{ post.frontmatter.date }</b></div>\n    <p className=\"post-item-content\">{ post.excerpt }</p>\n  </li>\n)\n\nexport default PostItem"],"sourceRoot":""}